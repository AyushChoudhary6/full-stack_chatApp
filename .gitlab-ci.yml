# -------------------------
# Deploy to Kubernetes via GitLab Agent
# -------------------------
deploy:
  stage: deploy
  image: alpine/kubectl:latest  # This image includes shell support
  needs: ["push_images"]
  environment:
    name: production
    kubernetes:
      namespace: chat-app
  script:
    # Ensure namespace exists
    - kubectl get ns chat-app || kubectl create ns chat-app
    
    # Apply CRDs first if they exist
    - |
      if [ -d "k8s/crds" ]; then
        echo "Applying CRDs..."
        kubectl apply -f k8s/crds/
        sleep 10
      fi
    
    # Apply all Kubernetes manifests (excluding kind-config if present)
    - |
      for manifest in k8s/*.yml k8s/*.yaml; do
        if [ -f "$manifest" ] && [[ "$manifest" != *"kind-config"* ]]; then
          echo "Applying $manifest..."
          kubectl apply -f "$manifest"
        fi
      done
    
    # Update deployment images
    - kubectl set image deployment/backend backend="$BACKEND_IMAGE" -n chat-app
    - kubectl set image deployment/frontend frontend="$FRONTEND_IMAGE" -n chat-app
    
    # Wait for deployments to complete
    - kubectl rollout status deployment/backend -n chat-app --timeout=300s
    - kubectl rollout status deployment/frontend -n chat-app --timeout=300s
    
    # Show deployment status
    - kubectl get pods -n chat-app
    - kubectl get services -n chat-app
  only:
    - main